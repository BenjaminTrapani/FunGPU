(let ((my-cons (lambda (x rest)
	(lambda (sel-first?)
	(if (> sel-first? 0) x rest))))
      (my-first (lambda (list)
         (list 1)))
      (my-rest (lambda (list)
         (list 0)))
      (my-list-terminator (lambda () 0)))
      (let ((my-is-empty (lambda (list) (eq? list my-list-terminator))))
          (letrec ((my-length (lambda (list)
                        (if (my-is-empty list)
                            0
                            (+ 1 (my-length (my-rest list)))))))
               (+ (my-length (my-cons 2 my-list-terminator)) (my-length (my-cons 3 (my-cons 4 my-list-terminator)))))))
